#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language ngerman
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\spacing single
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\biblio_style plain
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style german
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Entwickler-Tagebuch: Programmierung von Benutzeroberflächen
\end_layout

\begin_layout Author
von Paul Krampe und Fabian Hovestädt
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Tag 1: 14.10.2019
\end_layout

\begin_layout Itemize
Idee Festlegung: Fußball-App -> Ergebnisse 
\lang german
von
\lang ngerman
 Fußballspielen anzeigen
\end_layout

\begin_layout Itemize
individuelles einstellen von Teams oder Ligen denen der User folgen möchte,
 die dann auch angezeigt werden
\end_layout

\begin_layout Itemize
ersten Ansichten wurden erstellt: siehe Bild 1
\end_layout

\begin_layout Itemize
muss: Anzeigen von Fußballergebnissen der ausgewählten Mannschaft oder Liga
 (Lokal), Funktionierendes GUI, Daten verbunden mit einer Datenbank, Profilansic
ht für Mannschaft
\end_layout

\begin_layout Itemize
kann: Live Daten aus Fußball-API, aktuelle Daten, mehrere Ligen (Premier
 League), Mannschaft mit Kader anzeigen, Spielverlauf der letzten Tage jeder
 Mannschaft
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder/Whiteboard1.jpeg
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
Bild1: Startbildschirm erste Idee
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder/Whiteboard2.jpeg
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
Bild2: Mannschaft Profilansicht
\end_layout

\end_inset


\end_layout

\begin_layout Section
Tag 2: 04.11.2019
\end_layout

\begin_layout Itemize
erstellen Git Repository, verknüpfen des Projektes mit Github -> Steiniger
 Weg das hinzubekommen ohne Hilfe
\end_layout

\begin_layout Itemize
ersten 
\begin_inset Quotes eld
\end_inset

commit
\begin_inset Quotes erd
\end_inset

 ausführen
\end_layout

\begin_layout Itemize
vertraut machen mit der Projektumgebung in Visual Studio Code
\end_layout

\begin_layout Itemize
erste Änderung des Standartprojektes -> In Vue reinzukommen ist echt anstrengend
, obwohl ich schon HTML, CSS, JS recht gut beherrsche.
 Erinnert an C++ und Klassen
\end_layout

\begin_layout Itemize
eventuell mögliche API: https://www.programmableweb.com/api/bundesliga-live-scores
 -> sieht allerdings sehr kompliziert aus und wir kennen die Funktionalität
 und die Aktualität nicht
\end_layout

\begin_layout Section
Tag 3: 11.11.2019
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Problem
\begin_inset Quotes erd
\end_inset

 mit Git commits -> konnte nicht commiten obwohl Änderungen erkannt wurden
 -> hat mich sehr verwirrt
\end_layout

\begin_layout Itemize
Lösung war recht simple -> musste vorher sagen welche Files er commiten
 soll -> git add -A (alle)
\end_layout

\begin_layout Section
Tag 4 18.11.2019
\end_layout

\begin_layout Itemize
neuen Branch erstellt -> offizielle GitHub Seite hat vergessen zu erwähnen
 wie man den Branch 
\begin_inset Quotes eld
\end_inset

pushed
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
versuche eine Funktion zu schreiben die beim ersten aufruf der Seite einen
 bestimmten div sichtbar macht, sonst ausblendet
\end_layout

\begin_layout Itemize
zuerst hab ich versucht einen Cookie zu setzten und damit zu checken ob
 man die Seite schon mal besucht hat
\end_layout

\begin_layout Itemize
mit beforeMount soll er am Anfang gucken, ob ein Cookie gesetzt ist, wenn
 nicht -> zeigt er den div an
\end_layout

\begin_layout Itemize
danach setzt er einen neuen Cookie
\end_layout

\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<div id="erster" style=
\begin_inset Quotes erd
\end_inset

display=
\begin_inset Quotes erd
\end_inset

none
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout Plain Layout

 <p>Text</p>
\end_layout

\begin_layout Plain Layout

</div>
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

methods: {
\end_layout

\begin_layout Plain Layout

 GetCookie: function(name){
\end_layout

\begin_layout Plain Layout

  var arg = name + "=";
\end_layout

\begin_layout Plain Layout

  var alen = arg.length;
\end_layout

\begin_layout Plain Layout

  var clen = document.cookie.length;
\end_layout

\begin_layout Plain Layout

  var i = 0;
\end_layout

\begin_layout Plain Layout

  while (i < clen) {
\end_layout

\begin_layout Plain Layout

   var j = i + alen;
\end_layout

\begin_layout Plain Layout

   if (document.cookie.substring(i, j) == arg)
\end_layout

\begin_layout Plain Layout

    return "here";
\end_layout

\begin_layout Plain Layout

   i = document.cookie.indexOf(" ", i) + 1;
\end_layout

\begin_layout Plain Layout

   if (i == 0)
\end_layout

\begin_layout Plain Layout

    break;
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

  return null;
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

 showfirst: function(){
\end_layout

\begin_layout Plain Layout

  let erster = document.getElementById("#erster");
\end_layout

\begin_layout Plain Layout

  erster.style.display = "inline";
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

 beforeMount: function(){
\end_layout

\begin_layout Plain Layout

  let visit = GetCookie("COOKIE1");
\end_layout

\begin_layout Plain Layout

  if (visit == null){
\end_layout

\begin_layout Plain Layout

   showfirst();
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

  let expire=new Date();
\end_layout

\begin_layout Plain Layout

  expire = new Date(expire.getTime() + 7776000000);
\end_layout

\begin_layout Plain Layout

  document.cookie="COOKIE1=here; expires=" + expire;
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

};
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
ich bekomme zwar kein Fehler aber es funktioniert nicht 
\end_layout

\begin_layout Itemize
Chrome sagt mir, dass 
\begin_inset Quotes eld
\end_inset

style of null
\begin_inset Quotes erd
\end_inset

 nicht lesen kann -> vermute, dass das Objekt noch nicht erstellt ist und
 er demnach den style nicht ändern kann
\end_layout

\begin_layout Itemize
mit 
\begin_inset Quotes eld
\end_inset

ready:
\begin_inset Quotes erd
\end_inset

 statt 
\begin_inset Quotes eld
\end_inset

beforeMount
\begin_inset Quotes erd
\end_inset

 ist der Fehler zwar weg, aber funktionieren tut es trotzdem nicht
\end_layout

\begin_layout Section
Tag 5 25.11.2019
\end_layout

\begin_layout Itemize
auf Empfehlung die Cookie Angelegenheit gelöscht und auf local storage zurückgeg
riffen
\end_layout

\begin_layout Itemize
beim ersten Aufruf wird nun die Auswahl angezeigt und beim zweiten mal nicht
 -> später ändern, dass wenn nur nicht angezeigt wird wenn keine Teams gesetzt
\end_layout

\begin_layout Itemize
neue vue Sachen entdeckt: vue-if, else -> komischer Syntax
\end_layout

\begin_layout Section
Tag 6 09.12.2019
\end_layout

\begin_layout Itemize
hab vergeblich versucht einen Button zu erstellen der auf ein externes Script
 zugreift
\end_layout

\begin_layout Itemize
hab ein <a> der mittels v-on:click die Funktion 
\begin_inset Quotes gld
\end_inset

knopf
\begin_inset Quotes grd
\end_inset

 aufruft
\end_layout

\begin_layout Itemize
in der Funktion ist dann die Animation enthalten die beim drücken geschehen
 soll, allerdings mit Funktionen aus der TweenMax Datei von GSAP
\end_layout

\begin_layout Itemize
<script> in Index bewirkt nichts
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<script
\end_layout

\begin_layout Plain Layout

 type="application/javascript"
\end_layout

\begin_layout Plain Layout

 src="https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.3/TweenMax.min.js"
\end_layout

\begin_layout Plain Layout

>
\end_layout

\begin_layout Plain Layout

</script>
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

mounted(){
\end_layout

\begin_layout Plain Layout

 let scripts = document.createElement(
\begin_inset Quotes eld
\end_inset

script
\begin_inset Quotes erd
\end_inset

);
\end_layout

\begin_layout Plain Layout

 scripts.setAttribute(
\end_layout

\begin_layout Plain Layout

  
\begin_inset Quotes eld
\end_inset

src
\begin_inset Quotes erd
\end_inset

,
\end_layout

\begin_layout Plain Layout

  
\begin_inset Quotes eld
\end_inset

https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.3/TweenMax.min.js"
\end_layout

\begin_layout Plain Layout

 );
\end_layout

\begin_layout Plain Layout

 document.head.appendChild(scripts);
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
bewirkt auch nichts
\end_layout

\begin_layout Itemize
das ganze zu installieren funktioniert irgendwie auch nicht
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

npm install --save "https://cdnjs[...].js?vue&type=script&lang=js"
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
auch einen neuen Component hinzuzufügen gibt mir einen Fehler
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

SomeComponent: () => {
\end_layout

\begin_layout Plain Layout

 let vm = this;
\end_layout

\begin_layout Plain Layout

 return new Promise((resolve, reject) => {
\end_layout

\begin_layout Plain Layout

  let script = document.createElement("script");
\end_layout

\begin_layout Plain Layout

  script.onload = () => {
\end_layout

\begin_layout Plain Layout

   resolve(import(SomeComponent));
\end_layout

\begin_layout Plain Layout

   script.async = true;
\end_layout

\begin_layout Plain Layout

   script.src = 
\end_layout

\begin_layout Plain Layout

    "https://cdnjs.cloudflare.com/ajax/libs/gsap/2.1.3/TweenMax.min.js";
\end_layout

\begin_layout Plain Layout

   document.head.appendChild(script);
\end_layout

\begin_layout Plain Layout

  };
\end_layout

\begin_layout Plain Layout

 })
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
große Ratlosigkeit, werde wohl drauf verzichten müssen
\end_layout

\begin_layout Itemize
Funktion
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

knopf: function(event) { 
\end_layout

\begin_layout Plain Layout

 let duration = 3000, 
\end_layout

\begin_layout Plain Layout

 btn = event.target,
\end_layout

\begin_layout Plain Layout

 svg = btn.find("svg"),
\end_layout

\begin_layout Plain Layout

 svgPath = new Proxy( {
\end_layout

\begin_layout Plain Layout

  y: null,
\end_layout

\begin_layout Plain Layout

  smoothing: null
\end_layout

\begin_layout Plain Layout

 },
\end_layout

\begin_layout Plain Layout

 {
\end_layout

\begin_layout Plain Layout

  set(target, key, value) {
\end_layout

\begin_layout Plain Layout

   target[key] = value;
\end_layout

\begin_layout Plain Layout

   if (target.y !== null && target.smoothing !== null) {
\end_layout

\begin_layout Plain Layout

    svg.html(getPath(target.y, target.smoothing, null));
\end_layout

\begin_layout Plain Layout

   }
\end_layout

\begin_layout Plain Layout

   return true;
\end_layout

\begin_layout Plain Layout

  },
\end_layout

\begin_layout Plain Layout

  get(target, key) {
\end_layout

\begin_layout Plain Layout

   return target[key];
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

 });
\end_layout

\begin_layout Plain Layout

 btn.css("--duration", duration);
\end_layout

\begin_layout Plain Layout

 svgPath.y = 20;
\end_layout

\begin_layout Plain Layout

 svgPath.smoothing = 0;
\end_layout

\begin_layout Plain Layout

 if (event) { 
\end_layout

\begin_layout Plain Layout

  if (!btn.hasClass("loading")) {
\end_layout

\begin_layout Plain Layout

   btn.addClass("loading");
\end_layout

\begin_layout Plain Layout

   TweenMax.to(svgPath, (duration * 0.065) / 1000, { smoothing: 0.3});
\end_layout

\begin_layout Plain Layout

   TweenMax.to(svgPath, (duration * 0.265) / 1000, { 
\end_layout

\begin_layout Plain Layout

    y: 12, ease: Elastic.easeOut.config(1.12, 0.4)}).delay((duration * 0.065)
 / 1000);
\end_layout

\begin_layout Plain Layout

	setTimeout(() => { svg.html(getPath(0, 0, [[3, 14], [8, 19], [21, 6]]));
\end_layout

\begin_layout Plain Layout

   }, duration / 2);
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

  return false;
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
nach langem rumprobieren habe ich erstmal alles raus genommen und den Knopf
 selber neu geschrieben
\end_layout

\begin_layout Itemize
neues Problem: wenn ich auf den Knopf drücke passiert nichts
\end_layout

\begin_layout Itemize
Fehler gefunden: der Linter hat mir einen falschen Tipp gegeben er wollte
 dass ich bei dem on click Event statt 
\begin_inset Quotes eld
\end_inset

v:on
\begin_inset Quotes erd
\end_inset

, 
\begin_inset Quotes eld
\end_inset

@
\begin_inset Quotes erd
\end_inset

 schreibe aber das geht nicht, ist das normal?
\end_layout

\begin_layout Section
Tag 7 19.12.2019
\end_layout

\begin_layout Itemize
haben uns im Labor an die Localstorage Geschichte gesetzt
\end_layout

\begin_layout Itemize
als erstes habe ich die Funktion umgeschrieben, die die Teamauswahl anzeigen
 soll -> wird nun nicht mehr nur beim ersten Aufruf angezeigt, sondern solange
 wie keine Teams eingetragen sind
\end_layout

\begin_layout Itemize
eine weitere Funktion soll beim Knopfdruck ausgeführt werden und checkt
 alle Checkboxen ob sie 
\begin_inset Quotes eld
\end_inset

gecheckt
\begin_inset Quotes erd
\end_inset

 sind, wenn ja speichert er den Namen des Teams in einem array
\end_layout

\begin_layout Itemize
mein plan ist es alle Teams in einem Array zu haben, damit ich sie dann
 später abrufen kann
\end_layout

\begin_layout Section
Tag 8 23.12.2019
\end_layout

\begin_layout Itemize
hab mit php versucht eine Datenbank einzubinden
\end_layout

\begin_layout Itemize
phpMyAdmin, php, ein Apache Server und MsSql Server installiert
\end_layout

\begin_layout Itemize
eine Datenbank erstellt und eine Tabelle mit allen Bundesliga Teams + Infos
\end_layout

\begin_layout Itemize
nach mehrstündigem Versuchen das alles mit dem Vue Projekt zu verbinden
 habe ich herausgefunden, dass php und Vue überhaupt nicht mit einander
 klar kommen und hab es sein lassen
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Bilder/Datenbank.png
	scale 40

\end_inset


\end_layout

\begin_layout Itemize
Bild3: Datenbank + Tabelle
\end_layout

\begin_layout Section
06.01.2020
\end_layout

\begin_layout Itemize
Codereview: 
\end_layout

\begin_layout Itemize
Auf Nachfrage wie ich das Datenbankproblem lösen kann, wurde uns klar gemacht,
 dass eine Datenbank zwar cool wäre, aber zeitlich für uns nicht realisierbar
 mehr ist und etwas zu kompliziert
\end_layout

\begin_layout Itemize
des weiteren ist die bisherige Struktur des Projektes nicht zufriedenstellend
 gewesen, da die Möglichkeiten von Vue von uns noch nicht wirklich genutzt
 wurden
\end_layout

\begin_layout Itemize
Auf Grund dieser Erkenntnisse müssen wir ein paar unserer Projektpunkte
 ändern:
\end_layout

\begin_deeper
\begin_layout Itemize
Wir streichen die Datenbank komplett
\end_layout

\begin_layout Itemize
coden die Spielergebnisse in den Quellcode
\end_layout

\begin_layout Itemize
ändern die Funktionsweise der App etwas
\end_layout

\begin_layout Itemize
beschäftigen uns mehr mit Vue um unsere Struktur zu verbessern
\end_layout

\end_deeper
\begin_layout Itemize
Verzweiflung, da im Grunde alles an was wir gearbeitet haben bullsh** war
\end_layout

\begin_layout Itemize
haben dann 4,5 Stunden daran gesessen uns mit Vue weiter vertraut zu machen
 und mit Arrays zu arbeiten um unsere Spiele irgendwie anzeigen zu lassen,
 aber ohne großen Erfolg
\end_layout

\begin_layout Section
07.01.2020
\end_layout

\begin_layout Itemize
Da der gestrige Tag sehr niederschmetternd war hab ich mich nochmal an das
 Problem gesetzt
\end_layout

\begin_layout Itemize
ich hab unsere Checkboxen zuerst als Component ausgelagert um Platz zu schaffen
\end_layout

\begin_layout Itemize
ich hab zwar keine Ahnung warum, aber alle 
\begin_inset Quotes eld
\end_inset

Vue
\begin_inset Quotes erd
\end_inset

 Variablen, die ich versucht habe anzulegen wurden nie angenommen
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

new vm = new Vue() {}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
gab mir immer die Fehler, dass vm definiert ist, aber nie verwendet wird
 und das 
\begin_inset Quotes eld
\end_inset

Vue
\begin_inset Quotes erd
\end_inset

 nicht definiert ist
\end_layout

\begin_layout Itemize
ich hab aber alle genau wie in der Vue-Dokumentation geschrieben, aber dennoch
 ging nichts
\end_layout

\begin_layout Itemize
mittels: einem 
\begin_inset Quotes eld
\end_inset

import Vue from 'vue'
\begin_inset Quotes erd
\end_inset

 konnte ich das eine Problem lösen, aber das andere nicht
\end_layout

\begin_layout Itemize
hab dann einfach in dem export default eine data() Funktion auf gemacht
 und dort mein Spiel-Array rein gemacht
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

data() {
\end_layout

\begin_layout Plain Layout

 return {
\end_layout

\begin_layout Plain Layout

  spieltag: [
\end_layout

\begin_layout Plain Layout

   {
\end_layout

\begin_layout Plain Layout

	team1: "FC Bayern München",
\end_layout

\begin_layout Plain Layout

	team2: "FC Schalke 04",
\end_layout

\begin_layout Plain Layout

	tore1: 2,
\end_layout

\begin_layout Plain Layout

	tore2: 0
\end_layout

\begin_layout Plain Layout

   }, //und so weiter
\end_layout

\begin_layout Plain Layout

  ]
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

}
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
die Daten in der Tabelle ausgeben habe ich dann mit einer v-for Schleife
 realisiert
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<tr v-for="team in spieltag" :key="spieltag">
\end_layout

\begin_layout Plain Layout

 <td>{{ team.team1 }}</td>
\end_layout

\begin_layout Plain Layout

 <td>{{ team.tore1 }}:{{ team.tore2 }}</td>
\end_layout

\begin_layout Plain Layout

 <td>{{ team.team2 }}</td>
\end_layout

\begin_layout Plain Layout

</tr>
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
nach Stunden Bug-Fixing habe ich es endlich geschafft die Spiele auszugeben
\end_layout

\begin_layout Itemize
nun hab ich mich dran gesetzt das alles mit dem ausgewählten im Localstorage
 zu verbinden
\end_layout

\begin_layout Itemize
Grundidee: 
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Bilder/Diagramm-Spielergebnisse.jpg
	scale 40

\end_inset


\end_layout

\begin_layout Itemize
nach einiger Zeit hatte ich dann 2 Funktionen
\end_layout

\begin_layout Itemize
eine die beim drücken eines Knopfes die gecheckten Boxen in den Localstorage
 tut
\end_layout

\begin_layout Itemize
eine die die Spiele aus dem Spieltag Array mit dem Localstorage vergleicht
 und die gefunden Spiele in das Ergebnis Array kopiert
\end_layout

\begin_layout Itemize
nach einigem Bugfixing hat das auch funktioniert
\end_layout

\begin_layout Itemize
bin sehr zufrieden mit dem Tag, da ich im Grunde das komplette Projekt in
 einem Tag komplett geändert habe
\end_layout

\begin_layout Itemize
für 5 Teams kann man nun die jeweiligen Spiele anzeigen
\end_layout

\begin_layout Section
08.01.2020
\end_layout

\begin_layout Itemize
Design Aufbesserung: 
\end_layout

\begin_deeper
\begin_layout Itemize
Hintergrundbild
\end_layout

\begin_layout Itemize
responsive Design
\end_layout

\begin_layout Itemize
Banner zum Aufklappen einer Liga
\end_layout

\end_deeper
\begin_layout Itemize
jetzt kann man sich die App angucken ohne Fremdscham spüren zu müssen
\end_layout

\begin_layout Itemize
Bugfixes: 
\end_layout

\begin_deeper
\begin_layout Itemize
Tabelle wird erst gelöscht, wenn neue Teamauswahl getroffen um alte Tabelle
 erst los zu werden
\end_layout

\begin_layout Itemize
Neu laden der Seite bei vorhandenen Teams im Local Storage sorgt dafür das
 man bei der Tabelle bleibt mit seinen Teams
\end_layout

\end_deeper
\begin_layout Section
13.01.2020
\end_layout

\begin_layout Itemize
Anfangsrunde wo jeder sagt was er vor hat fand ich recht sinnlos, da mir
 das auch so schon klar ist und eigentlich nur Zeit verloren gegangen ist
 in der ich hätte Fragen stellen können
\end_layout

\begin_layout Itemize
Checkbox Design überarbeitet
\end_layout

\begin_layout Itemize
Button hinzugefügt womit man alle Teams auswählen oder auch entfernen kann
 -> Nutzerfreundlichkeit
\end_layout

\begin_layout Standard
\begin_inset Graphics
	filename Bilder/Checkboxen.png
	scale 30

\end_inset


\end_layout

\begin_layout Itemize
dafür habe ich eine Funktion geschrieben, die erst guckt ob etwas ausgewählt
 ist, wenn ja wird alle deselektiert, wenn nein wird alles selektiert
\end_layout

\begin_layout Itemize
das Grunddesign habe ich von w3school.com: https://www.w3schools.com/howto/howto_cs
s_custom_checkbox.asp
\end_layout

\begin_layout Itemize
des weiteren habe ich den Haupt div-container auf height: auto gesetzt damit
 automatisch die Größe des div generiert wird und hab einen Farbverlauf
 hinzugefügt damit man, wenn man viel nach unten scrollen kann, den div
 von dem Hintergrund unterscheiden kann
\end_layout

\begin_layout Section
16.01.2020
\end_layout

\begin_layout Itemize
heute hab ich mich der Mannschaftsübersicht gewidmet die Fabian bereits
 angefangen hat
\end_layout

\begin_layout Itemize
Idee: Teaminformationen in einem Array haben, ähnlich wie bei den Ergebnissen
 aufrufen, statt Name aber Team Logo anzeigen, welches angeklickt werden
 kann um die Informationen aufzuklappen
\end_layout

\begin_layout Itemize
letzten 5 Spiele des Teams sollen angezeigt werden
\end_layout

\begin_layout Itemize
details for Schleife bleibt bestehen
\end_layout

\begin_layout Itemize
in Summary kommt ein Bild wo in der 
\begin_inset Quotes gld
\end_inset

src
\begin_inset Quotes grd
\end_inset

 eine Funktion aufgerufen wird, der als Parameter der Teamname mitgegeben
 wird
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<img :src="assetsPath(team.name)" />
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
assetPath gibt den Pfad für das Bild zurück für das jeweilige Team
\end_layout

\begin_layout Itemize
die getData Funktion bekommt nun noch eine for Scheife, in der alle Mannschaftsd
etails, der im Localstorage vorhandenen Teams, in das Array TDetails gepusht
 werden
\end_layout

\begin_layout Itemize
in v-for wird nun das TDetails ausgegeben
\end_layout

\begin_layout Itemize
Mittels einer Tabelle hab ich die Informationen nun strukturiert
\end_layout

\begin_layout Itemize
Das arbeiten mit Vue dringt nun langsam zu mir durch und mir fällt es einfacher
 Lösungen für meine Probleme zu finde
\end_layout

\begin_layout Section
20.01.2020
\end_layout

\begin_layout Itemize
die Vorträge der Anderen hat uns gezeigt, dass wir noch ein bisschen Arbeit
 vor uns haben und das unser Vortrag heute komplett ins leere gegangen wäre
\end_layout

\begin_layout Itemize
gute Sache dass wir heute freiwillig entscheiden konnte ob wir vortragen
 oder nicht, jetzt haben wir ein Bild wie es ungefähr aussehen kann
\end_layout

\begin_layout Itemize
für die letzten 5 Spiele des Teams brauch ich noch ein v-for, allerdings
 hab ich das nicht ganz realisiert bekommen alles gleich anzuzeigen, wenn
 die Seite aufgerufen wird
\end_layout

\begin_layout Itemize
hab also ein Button hinzugefügt der eine Funktion aufruft und den Teamnamen
 übergeben bekommt
\end_layout

\begin_layout Itemize
die Funktion kopiert dann aus dem Spieltag Array die Spiele des Teams in
 ein neues Array
\end_layout

\begin_layout Itemize
allerdings hat die Funktion dafür gesorgt, dass in jedem details die Spielergebn
isse von nur einen Team aufgerufen wird
\end_layout

\begin_layout Itemize
auf Nachfrage gab es dann eine deutlich bessere Variante:
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<tr v-for="match in spieltag.filter(spieltag => team.name === spieltag.team1
 || team.name === spieltag.team2).slice(0, 5)" :key="match">
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
die filter() Funktion filtert nun aus unserem Spieltag Array die Spiele
 raus, in denen unser gesuchtes Team vorkommt
\end_layout

\begin_layout Itemize
die slice() Funktion hab ich noch hinzugefügt um die Ausgabe des Arrays
 auf 5 Spiele zu begrenzen
\end_layout

\begin_layout Itemize
Danke für den kranken Tipp auf jeden Fall Christoph, war eine sehr große
 Hilfe
\end_layout

\begin_layout Itemize
jetzt hatte ich noch die Idee die Spiele je nach Sieg oder Niederlage einzufärbe
n
\end_layout

\begin_layout Itemize
zuerst hab ich ein v-if nach dem v-for probiert aber dadurch lass ich nur
 meine Spiele nicht mehr anzeigen
\end_layout

\begin_layout Itemize
dann hab ich probiert eine Funktion zu schreiben die die Klasse der Zeile
 ändert je nach wer mehr Tore hatte, aber das hat alle Spiele gefärbt
\end_layout

\begin_layout Itemize
hab auf Stackoverflow gefragt wie es funktionieren könnte
\end_layout

\begin_layout Itemize
Antwort: 
\begin_inset Quotes gld
\end_inset

You can create a computed property based on history and determine the theme
 inside that.
\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

data() {
\end_layout

\begin_layout Plain Layout

 return {
\end_layout

\begin_layout Plain Layout

  history: []
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\begin_layout Plain Layout

},
\end_layout

\begin_layout Plain Layout

 computed: {
\end_layout

\begin_layout Plain Layout

  themedHistory () {
\end_layout

\begin_layout Plain Layout

   this.history.map(item => {
\end_layout

\begin_layout Plain Layout

    // determine the theme based on the item
\end_layout

\begin_layout Plain Layout

    // const theme = ...
\end_layout

\begin_layout Plain Layout

    return {
\end_layout

\begin_layout Plain Layout

     ...item,
\end_layout

\begin_layout Plain Layout

     theme
\end_layout

\begin_layout Plain Layout

    }
\end_layout

\begin_layout Plain Layout

   }
\end_layout

\begin_layout Plain Layout

  }
\end_layout

\begin_layout Plain Layout

 }
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<tr :class="match.theme" v-for="match in themedHistory" :key="match.id">
\end_layout

\begin_layout Plain Layout

 ...
\end_layout

\begin_layout Plain Layout

</tr>
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
Ich konnte es aber nicht für meinen Fall umcoden deswegen hab ich es erstmal
 sein lassen
\end_layout

\begin_layout Section
21.01.2020
\end_layout

\begin_layout Itemize
hab einen neuen Lösungsansatz: Ich färb einfach die Tabellenzellen ein,
 in der sich das Team entsprechende Team befindet
\end_layout

\begin_layout Itemize
ich hab dafür einige <td v-if> benutzt um sie in einer Farbe darzustellen
 oder auf Standart zu lassen
\end_layout

\begin_layout Itemize
gibt bestimmt bessere Alternativen, aber es löst erstmal mein Probleme
\end_layout

\begin_layout Itemize
jetzt widme ich mich noch der Tabelle, die die Bundesliga anzeigen soll
\end_layout

\end_body
\end_document
