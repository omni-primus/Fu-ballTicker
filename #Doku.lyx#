#LyX 2.3 created this file. For more info see http://www.lyx.org/
\lyxformat 544
\begin_document
\begin_header
\save_transient_properties true
\origin unavailable
\textclass article
\use_default_options true
\maintain_unincluded_children false
\language english
\language_package default
\inputencoding auto
\fontencoding global
\font_roman "default" "default"
\font_sans "default" "default"
\font_typewriter "default" "default"
\font_math "auto" "auto"
\font_default_family default
\use_non_tex_fonts false
\font_sc false
\font_osf false
\font_sf_scale 100 100
\font_tt_scale 100 100
\use_microtype false
\use_dash_ligatures true
\graphics default
\default_output_format default
\output_sync 0
\bibtex_command default
\index_command default
\paperfontsize default
\use_hyperref false
\papersize default
\use_geometry false
\use_package amsmath 1
\use_package amssymb 1
\use_package cancel 1
\use_package esint 1
\use_package mathdots 1
\use_package mathtools 1
\use_package mhchem 1
\use_package stackrel 1
\use_package stmaryrd 1
\use_package undertilde 1
\cite_engine basic
\cite_engine_type default
\use_bibtopic false
\use_indices false
\paperorientation portrait
\suppress_date false
\justification true
\use_refstyle 1
\use_minted 0
\index Index
\shortcut idx
\color #008000
\end_index
\secnumdepth 3
\tocdepth 3
\paragraph_separation indent
\paragraph_indentation default
\is_math_indent 0
\math_numbering_side default
\quotes_style english
\dynamic_quotes 0
\papercolumns 1
\papersides 1
\paperpagestyle default
\tracking_changes false
\output_changes false
\html_math_output 0
\html_css_as_file 0
\html_be_strict false
\end_header

\begin_body

\begin_layout Title
Entwickler-Tagebuch: Programmierung von Benutzeroberflächen
\end_layout

\begin_layout Author
von Paul Krampe und Fabian Hovestädt
\end_layout

\begin_layout Standard
\begin_inset CommandInset toc
LatexCommand tableofcontents

\end_inset


\end_layout

\begin_layout Section
Tag 1: 14.10.2019
\end_layout

\begin_layout Itemize
Idee Festlegung: Fußball-App -> Ergebnisse von Fußballspielen anzeigen
\end_layout

\begin_layout Itemize
individuelles einstellen von Teams oder Ligen denen der User folgen möchte,
 die dann auch angezeigt werden
\end_layout

\begin_layout Itemize
ersten Ansichten wurden erstellt: siehe Bild 1
\end_layout

\begin_layout Itemize
muss: Anzeigen von Fußballergebnissen der ausgewählten Mannschaft oder Liga
 (Lokal), Funktionierendes GUI, Daten verbunden mit einer Datenbank, Profilansic
ht für Mannschaft
\end_layout

\begin_layout Itemize
kann: Live Daten aus Fußball-API, aktuelle Daten, mehrere Ligen (Premier
 League), Mannschaft mit Kader anzeigen, Spielverlauf der letzten Tage jeder
 Mannschaft
\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder/Whiteboard1.jpeg
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
Bild1: Startbildschirm erste Idee
\end_layout

\end_inset


\end_layout

\begin_layout Standard
\begin_inset Float figure
placement H
wide false
sideways false
status collapsed

\begin_layout Plain Layout
\begin_inset Graphics
	filename Bilder/Whiteboard2.jpeg
	scale 20

\end_inset


\end_layout

\begin_layout Plain Layout
Bild2: Mannschaft Profilansicht
\end_layout

\end_inset


\end_layout

\begin_layout Section
Tag 2: 04.11.2019
\end_layout

\begin_layout Itemize
erstellen Git Repository, verknüpfen des Projektes mit Github -> Steiniger
 Weg das hinzubekommen ohne Hilfe
\end_layout

\begin_layout Itemize
ersten 
\begin_inset Quotes eld
\end_inset

commit
\begin_inset Quotes erd
\end_inset

 ausführen
\end_layout

\begin_layout Itemize
vertraut machen mit der Projektumgebung in Visual Studio Code
\end_layout

\begin_layout Itemize
erste Änderung des Standartprojektes -> In Vue reinzukommen ist echt anstrengend
, obwohl ich schon HTML, CSS, JS recht gut beherrsche.
 Erinnert an C++ und Klassen
\end_layout

\begin_layout Itemize
eventuell mögliche API: https://www.programmableweb.com/api/bundesliga-live-scores
 -> sieht allerdings sehr kompliziert aus und wir kennen die Funktionalität
 und die Aktualität nicht
\end_layout

\begin_layout Section
Tag 3: 11.11.2019
\end_layout

\begin_layout Itemize
\begin_inset Quotes eld
\end_inset

Problem
\begin_inset Quotes erd
\end_inset

 mit Git commits -> konnte nicht commiten obwohl Änderungen erkannt wurden
 -> hat mich sehr verwirrt
\end_layout

\begin_layout Itemize
Lösung war recht simple -> musste vorher sagen welche Files er commiten
 soll -> git add -A (alle)
\end_layout

\begin_layout Section
Tag 4 18.11.2019
\end_layout

\begin_layout Itemize
neuen Branch erstellt -> offizielle GitHub Seite hat vergessen zu erwähnen
 wie man den Branch 
\begin_inset Quotes eld
\end_inset

pushed
\begin_inset Quotes erd
\end_inset


\end_layout

\begin_layout Itemize
versuche eine funktion zu schreiben die beim ersten aufruf der seite einen
 bestimmten div sichtbar macht, sonst ausblendet
\end_layout

\begin_layout Itemize
zuerst hab ich versucht einen Cookie zu setzten und damit zu checken ob
 man die Seite schonmal besucht hat
\end_layout

\begin_layout Itemize
mit beforeMount soll er am Anfang gucken, ob ein Cookie gesetzt ist, wenn
 nicht -> zeigt er den div an
\end_layout

\begin_layout Itemize
danach setzt er einen neuen Cookie
\end_layout

\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

<div id="erster" style=
\begin_inset Quotes erd
\end_inset

display=
\begin_inset Quotes erd
\end_inset

none
\begin_inset Quotes erd
\end_inset

>
\end_layout

\begin_layout Plain Layout

	<p>Text</p>
\end_layout

\begin_layout Plain Layout

</div>
\end_layout

\end_inset


\end_layout

\begin_layout Itemize
\begin_inset listings
inline false
status open

\begin_layout Plain Layout

methods: {
\end_layout

\begin_layout Plain Layout

	GetCookie: function(name){
\end_layout

\begin_layout Plain Layout

		var arg = name + "=";
\end_layout

\begin_layout Plain Layout

		var alen = arg.length;
\end_layout

\begin_layout Plain Layout

        var clen = document.cookie.length;
\end_layout

\begin_layout Plain Layout

        var i = 0;
\end_layout

\begin_layout Plain Layout

        while (i < clen) {
\end_layout

\begin_layout Plain Layout

            var j = i + alen;
\end_layout

\begin_layout Plain Layout

               if (document.cookie.substring(i, j) == arg)
\end_layout

\begin_layout Plain Layout

                    return "here";
\end_layout

\begin_layout Plain Layout

                i = document.cookie.indexOf(" ", i) + 1;
\end_layout

\begin_layout Plain Layout

                if (i == 0)
\end_layout

\begin_layout Plain Layout

                     break;
\end_layout

\begin_layout Plain Layout

        }
\end_layout

\begin_layout Plain Layout

        return null;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	showfirst: function(){
\end_layout

\begin_layout Plain Layout

		let erster = document.getElementById("#erster");
\end_layout

\begin_layout Plain Layout

	    erster.style.display = "inline";
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

	beforeMount: function(){
\end_layout

\begin_layout Plain Layout

		let visit = GetCookie("COOKIE1");
\end_layout

\begin_layout Plain Layout

		if (visit == null){
\end_layout

\begin_layout Plain Layout

        	showfirst();
\end_layout

\begin_layout Plain Layout

		}
\end_layout

\begin_layout Plain Layout

	    let expire=new Date();
\end_layout

\begin_layout Plain Layout

	    expire = new Date(expire.getTime() + 7776000000);
\end_layout

\begin_layout Plain Layout

	    document.cookie="COOKIE1=here; expires=" + expire;
\end_layout

\begin_layout Plain Layout

	}
\end_layout

\begin_layout Plain Layout

};
\end_layout

\begin_layout Plain Layout

\end_layout

\begin_layout Plain Layout

\end_layout

\end_inset


\end_layout

\begin_deeper
\begin_layout Itemize
ich bekomme zwar kein fehler aber es funktioniert nicht
\end_layout

\end_deeper
\end_body
\end_document
